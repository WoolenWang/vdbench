/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class Vdb_Native */

#ifndef _Included_Vdb_Native
#define _Included_Vdb_Native
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     Vdb_Native
 * Method:    openfile
 * Signature: (Ljava/lang/String;II)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_openfile
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     Vdb_Native
 * Method:    closefile
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_closefile
  (JNIEnv *, jclass, jlong);

/*
 * Class:     Vdb_Native
 * Method:    fsync
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_fsync
  (JNIEnv *, jclass, jlong);

/*
 * Class:     Vdb_Native
 * Method:    directio
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_directio
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     Vdb_Native
 * Method:    getsize
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_getsize
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     Vdb_Native
 * Method:    get_simple_tod
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_get_1simple_1tod
  (JNIEnv *, jclass);

/*
 * Class:     Vdb_Native
 * Method:    multi_io
 * Signature: ([JI)V
 */
JNIEXPORT void JNICALL Java_Vdb_Native_multi_1io
  (JNIEnv *, jclass, jlongArray, jint);

/*
 * Class:     Vdb_Native
 * Method:    read
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_read
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     Vdb_Native
 * Method:    write
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_write
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     Vdb_Native
 * Method:    store_pattern
 * Signature: ([II)V
 */
JNIEXPORT void JNICALL Java_Vdb_Native_store_1pattern
  (JNIEnv *, jclass, jintArray, jint);

/*
 * Class:     Vdb_Native
 * Method:    array_to_buffer
 * Signature: ([IJ)V
 */
JNIEXPORT void JNICALL Java_Vdb_Native_array_1to_1buffer
  (JNIEnv *, jclass, jintArray, jlong);

/*
 * Class:     Vdb_Native
 * Method:    buffer_to_array
 * Signature: ([IJJ)V
 */
JNIEXPORT void JNICALL Java_Vdb_Native_buffer_1to_1array
  (JNIEnv *, jclass, jintArray, jlong, jlong);

/*
 * Class:     Vdb_Native
 * Method:    allocbuf
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_allocbuf
  (JNIEnv *, jclass, jlong);

/*
 * Class:     Vdb_Native
 * Method:    freebuf
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_Vdb_Native_freebuf
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     Vdb_Native
 * Method:    getKstatPointer
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_getKstatPointer
  (JNIEnv *, jclass, jstring);

/*
 * Class:     Vdb_Native
 * Method:    getKstatData
 * Signature: (LVdb/Kstat_data;J)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_getKstatData
  (JNIEnv *, jclass, jobject, jlong);

/*
 * Class:     Vdb_Native
 * Method:    getCpuData
 * Signature: (LVdb/Kstat_cpu;)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_getCpuData
  (JNIEnv *, jclass, jobject);

/*
 * Class:     Vdb_Native
 * Method:    openKstatGlobal
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_openKstatGlobal
  (JNIEnv *, jclass);

/*
 * Class:     Vdb_Native
 * Method:    closeKstatGlobal
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_closeKstatGlobal
  (JNIEnv *, jclass);

/*
 * Class:     Vdb_Native
 * Method:    setup_jni_context
 * Signature: (IDDDDJJJJJJJIILjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_Vdb_Native_setup_1jni_1context
  (JNIEnv *, jclass, jint, jdouble, jdouble, jdouble, jdouble, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jint, jint, jstring, jstring);

/*
 * Class:     Vdb_Native
 * Method:    get_one_set_statistics
 * Signature: (LVdb/WG_stats;IZ)V
 */
JNIEXPORT void JNICALL Java_Vdb_Native_get_1one_1set_1statistics
  (JNIEnv *, jclass, jobject, jint, jboolean);

/*
 * Class:     Vdb_Native
 * Method:    alloc_jni_shared_memory
 * Signature: (ZLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_Vdb_Native_alloc_1jni_1shared_1memory
  (JNIEnv *, jclass, jboolean, jstring);

/*
 * Class:     Vdb_Native
 * Method:    free_jni_shared_memory
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Vdb_Native_free_1jni_1shared_1memory
  (JNIEnv *, jclass);

/*
 * Class:     Vdb_Native
 * Method:    getWindowsErrorText
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_Vdb_Native_getWindowsErrorText
  (JNIEnv *, jclass, jint);

/*
 * Class:     Vdb_Native
 * Method:    windows_rewind
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_windows_1rewind
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     Vdb_Native
 * Method:    windows_tapemark
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_windows_1tapemark
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     Vdb_Native
 * Method:    readAndValidate
 * Signature: (JJJIJI[ILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_readAndValidate
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jlong, jint, jintArray, jstring);

/*
 * Class:     Vdb_Native
 * Method:    fillAndWrite
 * Signature: (JJJIJI[ILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_Vdb_Native_fillAndWrite
  (JNIEnv *, jclass, jlong, jlong, jlong, jint, jlong, jint, jintArray, jstring);

/*
 * Class:     Vdb_Native
 * Method:    fillLFSR
 * Signature: ([IJILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_Vdb_Native_fillLFSR
  (JNIEnv *, jclass, jintArray, jlong, jint, jstring);

/*
 * Class:     Vdb_Native
 * Method:    eraseFileSystemCache
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_Vdb_Native_eraseFileSystemCache
  (JNIEnv *, jclass, jlong, jlong);

#ifdef __cplusplus
}
#endif
#endif
